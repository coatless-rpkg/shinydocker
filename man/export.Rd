% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.R
\name{export}
\alias{export}
\title{Export a Shiny app to a Docker container}
\usage{
export(
  app_dir,
  output_dir = NULL,
  tag = NULL,
  port = 3838,
  env_vars = NULL,
  run = FALSE,
  detach = TRUE,
  quiet = FALSE,
  ...
)
}
\arguments{
\item{app_dir}{Character. Path to the Shiny application directory.}

\item{output_dir}{Character. Path where Docker configuration should be created.
If NULL, files will be created in app_dir.}

\item{tag}{Character. The tag for the Docker image. If NULL, a tag will be generated
from the directory name.}

\item{port}{Integer. The port to expose for the Shiny application. Default: 3838.}

\item{env_vars}{Named character vector. Environment variables to include in
the Docker configuration.}

\item{run}{Logical. Whether to run the container after building. Default: FALSE.}

\item{detach}{Logical. If run=TRUE, whether to run in detached mode. Default: TRUE.}

\item{quiet}{Logical. If TRUE, suppress Docker command output. Default: FALSE.}

\item{...}{Additional arguments passed to underlying functions.}
}
\value{
Invisibly returns a list with the paths to the created Docker files and
container information if run=TRUE.
}
\description{
This function takes a directory containing a Shiny application (either R or Python)
and exports it to an appropriate Docker container. It handles the entire process
including creating Docker configuration, building the Docker image, and optionally
running the container.
}
\examples{
\dontrun{
# Basic usage
export("path/to/my/shinyapp")

# Export and run
export("path/to/my/shinyapp", run = TRUE)

# Custom configuration
export("path/to/my/shinyapp", 
       tag = "myorg/myapp:latest",
       port = 8080,
       env_vars = c(API_KEY = "secret-key"),
       run = TRUE)
}
}
