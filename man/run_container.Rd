% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/container.R
\name{run_container}
\alias{run_container}
\title{Run a Docker container with a Shiny application}
\usage{
run_container(
  app_dir,
  tag = NULL,
  port = 3838,
  detach = FALSE,
  env_vars = NULL,
  docker_compose = TRUE,
  quiet = FALSE,
  force_port = FALSE,
  ...
)
}
\arguments{
\item{app_dir}{Character. Path to the Shiny application directory with Docker configuration.}

\item{tag}{Character. The tag for the Docker image to run. If NULL, a tag will be generated
from the directory name (should match what was used in build_image).}

\item{port}{Integer. The port to map to the container's exposed port. Default: 3838.}

\item{detach}{Logical. If TRUE, run container in detached mode. Default: FALSE.}

\item{env_vars}{Named character vector. Environment variables to pass to the container.}

\item{docker_compose}{Logical. If TRUE, use docker-compose for running if available. Default: TRUE.}

\item{quiet}{Logical. If TRUE, suppress Docker command output. Default: FALSE.}

\item{force_port}{Logical. If TRUE, fail if requested port is unavailable. If FALSE, try to find an alternative port. Default: FALSE.}

\item{...}{Additional arguments passed to processx.}
}
\value{
For detached mode, invisibly returns the container ID if successful.
For attached mode, the function will block until the container stops.
}
\description{
Run a Docker container with a Shiny application
}
\examples{
\dontrun{
# First create Docker configuration and build
dockerize("path/to/my/shinyapp")
build_image("path/to/my/shinyapp")

# Run the container
run_container("path/to/my/shinyapp")

# Run detached on a different port
run_container("path/to/my/shinyapp", port = 8080, detach = TRUE)
}
}
