[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Joseph Balamuta. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2025). shinydocker: Containerize Shiny Applications Docker. R package version 0.1.0, https://github.com/coatless-rpkg/shinydocker, https://r-pkg.thecoatlessprofessor.com/shinydocker/.","code":"@Manual{,   title = {shinydocker: Containerize Shiny Applications with Docker},   author = {James Joseph Balamuta},   year = {2025},   note = {R package version 0.1.0, https://github.com/coatless-rpkg/shinydocker},   url = {https://r-pkg.thecoatlessprofessor.com/shinydocker/}, }"},{"path":"/index.html","id":"shinydocker-","dir":"","previous_headings":"","what":"Containerize Shiny Applications with Docker","title":"Containerize Shiny Applications with Docker","text":"shinydocker simplifies containerizing Shiny applications automatically generating Docker configurations, building images, managing containers. supports R Python Shiny apps intelligent detection app type dependencies. [!IMPORTANT] package currently prototype/experimental stage. yet available CRAN may bugs limitations.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Containerize Shiny Applications with Docker","text":"can install development version shinydocker GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"coatless-rpkg/shinydocker\")"},{"path":"/index.html","id":"prerequisites","dir":"","previous_headings":"Installation","what":"Prerequisites","title":"Containerize Shiny Applications with Docker","text":"R (>= 4.4.0) Optionally, Docker Compose advanced container management","code":""},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Containerize Shiny Applications with Docker","text":"shinydocker, can containerize Shiny app just lines code. ’s two ways get started package!","code":""},{"path":"/index.html","id":"one-command-export","dir":"","previous_headings":"Quick Start","what":"One-Command Export","title":"Containerize Shiny Applications with Docker","text":"simplest way containerize Shiny app use shinydocker::export() function:","code":"library(shinydocker)  # Export app to Docker with a single command (detects app type automatically) shinydocker::export(\"path/to/your/shinyapp\", run = TRUE)"},{"path":"/index.html","id":"example-converting-the-hello-world-shiny-app","dir":"","previous_headings":"Quick Start","what":"Example: Converting the “Hello World” Shiny App","title":"Containerize Shiny Applications with Docker","text":"get started, let’s convert classic “Hello World” Shiny app Docker container:","code":"# Copy the Hello World example from the shiny package app_dir <- \"hello_world_app\" system.file(\"examples\", \"01_hello\", package = \"shiny\") |>   fs::dir_copy(app_dir, overwrite = TRUE)  # Export to Docker and run shinydocker::export(app_dir, run = TRUE, detach = TRUE)  # The console will show a URL where you can access your containerized app  # Stop the container when done shinydocker::stop_container()"},{"path":"/index.html","id":"step-by-step-workflow","dir":"","previous_headings":"Quick Start","what":"Step-by-Step Workflow","title":"Containerize Shiny Applications with Docker","text":"control containerization process:","code":"library(shinydocker)  # 1. Create Docker configuration shinydocker::dockerize(\"path/to/your/shinyapp\")  # 2. Build Docker image  shinydocker::build_image(\"path/to/your/shinyapp\")  # 3. Run the container on port 8080 shinydocker::run_container(\"path/to/your/shinyapp\", port = 8080, detach = TRUE)  # 4. When done, stop the container shinydocker::stop_container(\"path/to/your/shinyapp\")"},{"path":"/index.html","id":"r-or-python-shiny-apps","dir":"","previous_headings":"Quick Start","what":"R or Python Shiny Apps","title":"Containerize Shiny Applications with Docker","text":"shinydocker automatically detects containerizes either R Python Shiny apps detecting app type dependencies app directory. app type determined presence either app.R/server.R/ui.R file R Shiny apps app.py/server.py/ui.py file Python Shiny apps. Dependencies detected automatically app source R Shiny apps requirements.txt file Python Shiny apps. Therefore, can use export() function R Python Shiny apps:","code":"shinydocker::export(\"path/to/your/python_shinyapp\", run = TRUE)"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"Quick Start","what":"Examples","title":"Containerize Shiny Applications with Docker","text":"examples available package’s inst/examples/shiny directory.","code":""},{"path":"/index.html","id":"advanced-configuration","dir":"","previous_headings":"","what":"Advanced Configuration","title":"Containerize Shiny Applications with Docker","text":"advanced use cases, can customize containerization process additional options. can pass options dockerize() function.","code":""},{"path":"/index.html","id":"environment-variables","dir":"","previous_headings":"Advanced Configuration","what":"Environment Variables","title":"Containerize Shiny Applications with Docker","text":"Pass sensitive information configuration Shiny app:","code":"# Add environment variables to the container shinydocker::dockerize(\"path/to/your/shinyapp\",            env_vars = c(             API_KEY = \"your-secret-key\",             DB_HOST = \"database.example.com\",             LOG_LEVEL = \"INFO\"           ))"},{"path":"/index.html","id":"custom-port-mapping","dir":"","previous_headings":"Advanced Configuration","what":"Custom Port Mapping","title":"Containerize Shiny Applications with Docker","text":"","code":"# Run the container on a specific port shinydocker::run_container(\"path/to/your/shinyapp\", port = 3000)"},{"path":"/index.html","id":"custom-dockerfile-template","dir":"","previous_headings":"Advanced Configuration","what":"Custom Dockerfile Template","title":"Containerize Shiny Applications with Docker","text":"advanced customization, can provide Dockerfile template:","code":"# Use a custom Dockerfile template shinydocker::dockerize(\"path/to/your/shinyapp\",            custom_dockerfile = \"path/to/custom/Dockerfile\")"},{"path":"/index.html","id":"diagnostic-tools","dir":"","previous_headings":"","what":"Diagnostic Tools","title":"Containerize Shiny Applications with Docker","text":"shinydocker provides two situation report (sitrep) functions offer diagnostic information Docker environment app containerization readiness.","code":""},{"path":"/index.html","id":"check-docker-environment","dir":"","previous_headings":"Diagnostic Tools","what":"Check Docker Environment","title":"Containerize Shiny Applications with Docker","text":"","code":"# Check if Docker is correctly set up shinydocker::sitrep_docker()"},{"path":"/index.html","id":"analyze-app-containerization-readiness","dir":"","previous_headings":"Diagnostic Tools","what":"Analyze App Containerization Readiness","title":"Containerize Shiny Applications with Docker","text":"","code":"# Check if your app is ready for containerization shinydocker::sitrep_app_conversion(\"path/to/your/shinyapp\")"},{"path":"/index.html","id":"container-management","dir":"","previous_headings":"","what":"Container Management","title":"Containerize Shiny Applications with Docker","text":"shinydocker provides functions manage Shiny app containers can start, stop, clean containers ease without needing remember Docker commands jump terminal.","code":""},{"path":"/index.html","id":"running-containers","dir":"","previous_headings":"Container Management","what":"Running Containers","title":"Containerize Shiny Applications with Docker","text":"","code":"# Run with docker-compose (if available) shinydocker::run_container(\"path/to/your/shinyapp\", docker_compose = TRUE)  # Run with plain docker shinydocker::run_container(\"path/to/your/shinyapp\", docker_compose = FALSE)"},{"path":"/index.html","id":"stopping-containers","dir":"","previous_headings":"Container Management","what":"Stopping Containers","title":"Containerize Shiny Applications with Docker","text":"","code":"# Stop container for a specific app shinydocker::stop_container(\"path/to/your/shinyapp\")  # Stop all running containers shinydocker::stop_container()"},{"path":"/index.html","id":"cleanup","dir":"","previous_headings":"Container Management","what":"Cleanup","title":"Containerize Shiny Applications with Docker","text":"","code":"# Remove containers for a specific app shinydocker::cleanup_containers(\"path/to/your/shinyapp\")  # Remove all shinydocker containers and images shinydocker::cleanup_containers(remove_images = TRUE, force = TRUE)  # Clean up and run docker system prune shinydocker::cleanup_containers(prune = TRUE)"},{"path":"/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Containerize Shiny Applications with Docker","text":"encounter issues: Run shinydocker::sitrep_docker() check Docker installation Run shinydocker::sitrep_app_conversion(\"path///shinyapp\") analyze app issues Check port conflicts shinydocker::is_port_available(3838) Need help? Consider opening issue repository.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Containerize Shiny Applications with Docker","text":"use shinydocker research project, please consider citing :","code":"citation(\"shinydocker\")"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Containerize Shiny Applications with Docker","text":"AGPL (>= 3)","code":""},{"path":"/reference/build_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Docker image for a Shiny application — build_image","title":"Build Docker image for a Shiny application — build_image","text":"Build Docker image Shiny application","code":""},{"path":"/reference/build_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Docker image for a Shiny application — build_image","text":"","code":"build_image(app_dir, tag = NULL, build_args = NULL, quiet = FALSE, ...)"},{"path":"/reference/build_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Docker image for a Shiny application — build_image","text":"app_dir Character. Path Shiny application directory Docker configuration. tag Character. tag Docker image. NULL, tag generated directory name. build_args Named character vector. Additional build arguments pass Docker. quiet Logical. TRUE, suppress Docker build output. Default: FALSE. ... Additional arguments passed processx.","code":""},{"path":"/reference/build_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Docker image for a Shiny application — build_image","text":"Invisibly returns image ID successful.","code":""},{"path":"/reference/build_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Docker image for a Shiny application — build_image","text":"","code":"if (FALSE) { # \\dontrun{ # First create Docker configuration dockerize(\"path/to/my/shinyapp\")  # Then build the image build_image(\"path/to/my/shinyapp\")  # With a custom tag build_image(\"path/to/my/shinyapp\", tag = \"myorg/myapp:latest\") } # }"},{"path":"/reference/check_app_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a directory exists and is valid — check_app_directory","title":"Check if a directory exists and is valid — check_app_directory","text":"Check directory exists valid","code":""},{"path":"/reference/check_app_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a directory exists and is valid — check_app_directory","text":"","code":"check_app_directory(app_dir)"},{"path":"/reference/check_app_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a directory exists and is valid — check_app_directory","text":"app_dir Character. Path check.","code":""},{"path":"/reference/check_app_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a directory exists and is valid — check_app_directory","text":"Invisibly returns TRUE valid, otherwise aborts error message.","code":""},{"path":"/reference/check_docker_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Docker is available and abort if not — check_docker_available","title":"Check if Docker is available and abort if not — check_docker_available","text":"Check Docker available abort ","code":""},{"path":"/reference/check_docker_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Docker is available and abort if not — check_docker_available","text":"","code":"check_docker_available()"},{"path":"/reference/check_docker_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Docker is available and abort if not — check_docker_available","text":"Invisibly returns TRUE Docker available, otherwise aborts error message.","code":""},{"path":"/reference/check_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Dockerfile exists in the specified directory — check_dockerfile","title":"Check if a Dockerfile exists in the specified directory — check_dockerfile","text":"Check Dockerfile exists specified directory","code":""},{"path":"/reference/check_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Dockerfile exists in the specified directory — check_dockerfile","text":"","code":"check_dockerfile(app_dir)"},{"path":"/reference/check_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Dockerfile exists in the specified directory — check_dockerfile","text":"app_dir Character. Path application directory.","code":""},{"path":"/reference/check_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Dockerfile exists in the specified directory — check_dockerfile","text":"Invisibly returns TRUE exists, otherwise aborts error message.","code":""},{"path":"/reference/check_shiny_app_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if directory contains valid Shiny app files and abort if not — check_shiny_app_files","title":"Check if directory contains valid Shiny app files and abort if not — check_shiny_app_files","text":"Check directory contains valid Shiny app files abort ","code":""},{"path":"/reference/check_shiny_app_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if directory contains valid Shiny app files and abort if not — check_shiny_app_files","text":"","code":"check_shiny_app_files(app_dir)"},{"path":"/reference/check_shiny_app_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if directory contains valid Shiny app files and abort if not — check_shiny_app_files","text":"app_dir Character. Path Shiny application directory.","code":""},{"path":"/reference/check_shiny_app_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if directory contains valid Shiny app files and abort if not — check_shiny_app_files","text":"Invisibly returns TRUE valid, otherwise aborts error message.","code":""},{"path":"/reference/cleanup_container.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up Docker containers and images created by shinydocker — cleanup_container","title":"Clean up Docker containers and images created by shinydocker — cleanup_container","text":"function removes Docker containers optionally images created shinydocker package. can target specific application clean shinydocker-created containers images.","code":""},{"path":"/reference/cleanup_container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up Docker containers and images created by shinydocker — cleanup_container","text":"","code":"cleanup_container(   app_dir = NULL,   remove_images = FALSE,   include_running = FALSE,   force = FALSE,   prune = FALSE,   quiet = FALSE,   ... )"},{"path":"/reference/cleanup_container.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up Docker containers and images created by shinydocker — cleanup_container","text":"app_dir Character. Path Shiny application directory. provided, containers/images related application removed. NULL, containers/images created shinydocker considered. remove_images Logical. TRUE, also remove Docker images removing containers. Default: FALSE. include_running Logical. TRUE, stop remove running containers. FALSE, stopped containers removed. Default: FALSE. force Logical. TRUE, force removal without confirmation. Default: FALSE. prune Logical. TRUE, run docker system prune cleanup remove unused data. Default: FALSE. quiet Logical. TRUE, suppress Docker command output. Default: FALSE. ... Additional arguments passed processx.","code":""},{"path":"/reference/cleanup_container.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up Docker containers and images created by shinydocker — cleanup_container","text":"Invisibly returns list counts removed containers images.","code":""},{"path":"/reference/cleanup_container.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean up Docker containers and images created by shinydocker — cleanup_container","text":"","code":"if (FALSE) { # \\dontrun{ # Clean up containers for a specific app cleanup_container(\"path/to/my/shinyapp\")  # Clean up all shinydocker containers and images cleanup_container(remove_images = TRUE)  # Force cleanup of all containers including running ones cleanup_container(include_running = TRUE, force = TRUE) } # }"},{"path":"/reference/create_docker_compose.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a docker-compose.yml file for a Shiny application — create_docker_compose","title":"Create a docker-compose.yml file for a Shiny application — create_docker_compose","text":"Create docker-compose.yml file Shiny application","code":""},{"path":"/reference/create_docker_compose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a docker-compose.yml file for a Shiny application — create_docker_compose","text":"","code":"create_docker_compose(output_dir, port = 3838, env_vars = NULL, ...)"},{"path":"/reference/create_docker_compose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a docker-compose.yml file for a Shiny application — create_docker_compose","text":"output_dir Character. Directory file created. port Integer. port expose. env_vars Named character vector. Environment variables. ... Additional arguments.","code":""},{"path":"/reference/create_docker_compose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a docker-compose.yml file for a Shiny application — create_docker_compose","text":"Character. Path created file.","code":""},{"path":"/reference/create_dockerfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Dockerfile for a Shiny application — create_dockerfile","title":"Create a Dockerfile for a Shiny application — create_dockerfile","text":"Create Dockerfile Shiny application","code":""},{"path":"/reference/create_dockerfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Dockerfile for a Shiny application — create_dockerfile","text":"","code":"create_dockerfile(   output_dir,   app_type,   custom_template = NULL,   port = 3838,   dependencies = list(),   env_vars = NULL,   ... )"},{"path":"/reference/create_dockerfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Dockerfile for a Shiny application — create_dockerfile","text":"output_dir Character. Directory Dockerfile created. app_type Character. Either \"r\" \"python\". custom_template Character. Path custom Dockerfile template. port Integer. port expose. dependencies List. Application dependencies. env_vars Named character vector. Environment variables. ... Additional arguments.","code":""},{"path":"/reference/create_dockerfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Dockerfile for a Shiny application — create_dockerfile","text":"Character. Path created Dockerfile.","code":""},{"path":"/reference/create_dockerignore.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a .dockerignore file — create_dockerignore","title":"Create a .dockerignore file — create_dockerignore","text":"Create .dockerignore file","code":""},{"path":"/reference/create_dockerignore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a .dockerignore file — create_dockerignore","text":"","code":"create_dockerignore(output_dir)"},{"path":"/reference/create_dockerignore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a .dockerignore file — create_dockerignore","text":"output_dir Character. Directory file created.","code":""},{"path":"/reference/create_dockerignore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a .dockerignore file — create_dockerignore","text":"Character. Path created file.","code":""},{"path":"/reference/detect_app_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the type of Shiny application (R or Python) — detect_app_type","title":"Detect the type of Shiny application (R or Python) — detect_app_type","text":"Detect type Shiny application (R Python)","code":""},{"path":"/reference/detect_app_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the type of Shiny application (R or Python) — detect_app_type","text":"","code":"detect_app_type(app_dir)"},{"path":"/reference/detect_app_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the type of Shiny application (R or Python) — detect_app_type","text":"app_dir Character. Path Shiny application directory.","code":""},{"path":"/reference/detect_app_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the type of Shiny application (R or Python) — detect_app_type","text":"Character. Either \"r\" \"python\".","code":""},{"path":"/reference/detect_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect dependencies for a Shiny application — detect_dependencies","title":"Detect dependencies for a Shiny application — detect_dependencies","text":"Detect dependencies Shiny application","code":""},{"path":"/reference/detect_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect dependencies for a Shiny application — detect_dependencies","text":"","code":"detect_dependencies(app_dir, app_type)"},{"path":"/reference/detect_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect dependencies for a Shiny application — detect_dependencies","text":"app_dir Character. Path Shiny application directory. app_type Character. Either \"r\" \"python\".","code":""},{"path":"/reference/detect_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect dependencies for a Shiny application — detect_dependencies","text":"Character vector detected dependencies.","code":""},{"path":"/reference/detect_python_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Python package dependencies — detect_python_dependencies","title":"Detect Python package dependencies — detect_python_dependencies","text":"Detect Python package dependencies","code":""},{"path":"/reference/detect_python_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Python package dependencies — detect_python_dependencies","text":"","code":"detect_python_dependencies(app_dir)"},{"path":"/reference/detect_python_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Python package dependencies — detect_python_dependencies","text":"app_dir Character. Path Shiny application directory.","code":""},{"path":"/reference/detect_python_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Python package dependencies — detect_python_dependencies","text":"Character vector detected Python package dependencies.","code":""},{"path":"/reference/detect_r_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect R package dependencies — detect_r_dependencies","title":"Detect R package dependencies — detect_r_dependencies","text":"Detect R package dependencies","code":""},{"path":"/reference/detect_r_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect R package dependencies — detect_r_dependencies","text":"","code":"detect_r_dependencies(app_dir)"},{"path":"/reference/detect_r_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect R package dependencies — detect_r_dependencies","text":"app_dir Character. Path Shiny application directory.","code":""},{"path":"/reference/detect_r_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect R package dependencies — detect_r_dependencies","text":"Character vector detected R package dependencies.","code":""},{"path":"/reference/dockerize.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Docker configuration for a Shiny application — dockerize","title":"Create Docker configuration for a Shiny application — dockerize","text":"Create Docker configuration Shiny application","code":""},{"path":"/reference/dockerize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Docker configuration for a Shiny application — dockerize","text":"","code":"dockerize(   app_dir,   output_dir = NULL,   app_type = NULL,   port = 3838,   dependencies = TRUE,   custom_dockerfile = NULL,   env_vars = NULL,   ... )"},{"path":"/reference/dockerize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Docker configuration for a Shiny application — dockerize","text":"app_dir Character. Path Shiny application directory. output_dir Character. Path Docker configuration created. NULL, files created app_dir. app_type Character. Either \"r\" \"python\". NULL, auto-detected. port Integer. port expose Shiny application. Default: 3838. dependencies Logical. Whether automatically detect include dependencies. Default: TRUE. custom_dockerfile Character. Path custom Dockerfile template use. NULL, package's built-templates used. env_vars Named character vector. Environment variables include Docker configuration. ... Additional arguments passed internal functions.","code":""},{"path":"/reference/dockerize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Docker configuration for a Shiny application — dockerize","text":"Invisibly returns path created Docker configuration.","code":""},{"path":"/reference/dockerize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Docker configuration for a Shiny application — dockerize","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage with an R Shiny app dockerize(\"path/to/my/shinyapp\")  # For a Python Shiny app dockerize(\"path/to/my/python/shinyapp\", app_type = \"python\")  # With custom port and environment variables dockerize(\"path/to/my/shinyapp\", port = 8080,           env_vars = c(API_KEY = \"your-secret-key\")) } # }"},{"path":"/reference/execute_docker_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a Docker command with standardized error handling — execute_docker_command","title":"Execute a Docker command with standardized error handling — execute_docker_command","text":"Execute Docker command standardized error handling","code":""},{"path":"/reference/execute_docker_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a Docker command with standardized error handling — execute_docker_command","text":"","code":"execute_docker_command(   cmd,   args,   quiet = FALSE,   echo = !quiet,   error_on_status = FALSE,   ... )"},{"path":"/reference/execute_docker_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a Docker command with standardized error handling — execute_docker_command","text":"cmd Character. command execute (e.g., \"docker\", \"docker-compose\"). args Character vector. Arguments command. quiet Logical. TRUE, suppress command output. Default: FALSE. echo Logical. Whether echo command output. Default: !quiet. error_on_status Logical. Whether error non-zero exit status. Default: FALSE. ... Additional arguments passed processx::run.","code":""},{"path":"/reference/execute_docker_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a Docker command with standardized error handling — execute_docker_command","text":"result processx::run.","code":""},{"path":"/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a Shiny app to a Docker container — export","title":"Export a Shiny app to a Docker container — export","text":"function takes directory containing Shiny application (either R Python) exports appropriate Docker container. handles entire process including creating Docker configuration, building Docker image, optionally running container.","code":""},{"path":"/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a Shiny app to a Docker container — export","text":"","code":"export(   app_dir,   output_dir = NULL,   tag = NULL,   port = 3838,   env_vars = NULL,   run = FALSE,   detach = TRUE,   quiet = FALSE,   ... )"},{"path":"/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a Shiny app to a Docker container — export","text":"app_dir Character. Path Shiny application directory. output_dir Character. Path Docker configuration created. NULL, files created app_dir. tag Character. tag Docker image. NULL, tag generated directory name. port Integer. port expose Shiny application. Default: 3838. env_vars Named character vector. Environment variables include Docker configuration. run Logical. Whether run container building. Default: FALSE. detach Logical. run=TRUE, whether run detached mode. Default: TRUE. quiet Logical. TRUE, suppress Docker command output. Default: FALSE. ... Additional arguments passed underlying functions.","code":""},{"path":"/reference/export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a Shiny app to a Docker container — export","text":"Invisibly returns list paths created Docker files container information run=TRUE.","code":""},{"path":"/reference/export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a Shiny app to a Docker container — export","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage export(\"path/to/my/shinyapp\")  # Export and run export(\"path/to/my/shinyapp\", run = TRUE)  # Custom configuration export(\"path/to/my/shinyapp\",         tag = \"myorg/myapp:latest\",        port = 8080,        env_vars = c(API_KEY = \"secret-key\"),        run = TRUE) } # }"},{"path":"/reference/extract_library_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract package names from library() and require() calls — extract_library_packages","title":"Extract package names from library() and require() calls — extract_library_packages","text":"Extract package names library() require() calls","code":""},{"path":"/reference/extract_library_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract package names from library() and require() calls — extract_library_packages","text":"","code":"extract_library_packages(r_code)"},{"path":"/reference/extract_library_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract package names from library() and require() calls — extract_library_packages","text":"r_code Character vector. R code analyze.","code":""},{"path":"/reference/extract_library_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract package names from library() and require() calls — extract_library_packages","text":"Character vector package names.","code":""},{"path":"/reference/extract_namespace_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract package names from namespace calls (package::function) — extract_namespace_packages","title":"Extract package names from namespace calls (package::function) — extract_namespace_packages","text":"Extract package names namespace calls (package::function)","code":""},{"path":"/reference/extract_namespace_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract package names from namespace calls (package::function) — extract_namespace_packages","text":"","code":"extract_namespace_packages(r_code)"},{"path":"/reference/extract_namespace_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract package names from namespace calls (package::function) — extract_namespace_packages","text":"r_code Character vector. R code analyze.","code":""},{"path":"/reference/extract_namespace_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract package names from namespace calls (package::function) — extract_namespace_packages","text":"Character vector package names.","code":""},{"path":"/reference/find_available_port.html","id":null,"dir":"Reference","previous_headings":"","what":"Find an available port starting from a given port — find_available_port","title":"Find an available port starting from a given port — find_available_port","text":"Find available port starting given port","code":""},{"path":"/reference/find_available_port.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find an available port starting from a given port — find_available_port","text":"","code":"find_available_port(start_port, max_tries = 100)"},{"path":"/reference/find_available_port.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find an available port starting from a given port — find_available_port","text":"start_port Integer. port start checking . max_tries Integer. Maximum number ports check. Default: 100.","code":""},{"path":"/reference/find_available_port.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find an available port starting from a given port — find_available_port","text":"Integer. available port NULL port found.","code":""},{"path":"/reference/find_containers_for_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Find containers associated with an application — find_containers_for_app","title":"Find containers associated with an application — find_containers_for_app","text":"Find containers associated application","code":""},{"path":"/reference/find_containers_for_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find containers associated with an application — find_containers_for_app","text":"","code":"find_containers_for_app(app_dir, quiet = FALSE, ...)"},{"path":"/reference/find_containers_for_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find containers associated with an application — find_containers_for_app","text":"app_dir Character. Path application directory. quiet Logical. Whether suppress messages. ... Additional arguments passed processx.","code":""},{"path":"/reference/find_containers_for_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find containers associated with an application — find_containers_for_app","text":"Character vector. Container IDs.","code":""},{"path":"/reference/format_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Format dependencies for inclusion in Dockerfile — format_dependencies","title":"Format dependencies for inclusion in Dockerfile — format_dependencies","text":"Format dependencies inclusion Dockerfile","code":""},{"path":"/reference/format_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format dependencies for inclusion in Dockerfile — format_dependencies","text":"","code":"format_dependencies(app_type, dependencies)"},{"path":"/reference/format_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format dependencies for inclusion in Dockerfile — format_dependencies","text":"app_type Character. Either \"r\" \"python\". dependencies List dependencies.","code":""},{"path":"/reference/format_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format dependencies for inclusion in Dockerfile — format_dependencies","text":"Character string formatted dependencies.","code":""},{"path":"/reference/format_env_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Format environment variables for inclusion in Dockerfile — format_env_vars","title":"Format environment variables for inclusion in Dockerfile — format_env_vars","text":"Format environment variables inclusion Dockerfile","code":""},{"path":"/reference/format_env_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format environment variables for inclusion in Dockerfile — format_env_vars","text":"","code":"format_env_vars(env_vars)"},{"path":"/reference/format_env_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format environment variables for inclusion in Dockerfile — format_env_vars","text":"env_vars Named character vector. Environment variables.","code":""},{"path":"/reference/format_env_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format environment variables for inclusion in Dockerfile — format_env_vars","text":"Character string formatted environment variables.","code":""},{"path":"/reference/generate_app_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate app URL based on app type and port — generate_app_url","title":"Generate app URL based on app type and port — generate_app_url","text":"Generate app URL based app type port","code":""},{"path":"/reference/generate_app_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate app URL based on app type and port — generate_app_url","text":"","code":"generate_app_url(app_type, port)"},{"path":"/reference/generate_app_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate app URL based on app type and port — generate_app_url","text":"app_type Character. Either \"r\" \"python\". port Integer. Port number.","code":""},{"path":"/reference/generate_app_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate app URL based on app type and port — generate_app_url","text":"Character. URL access app.","code":""},{"path":"/reference/generate_image_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a default Docker image tag based on app directory — generate_image_tag","title":"Generate a default Docker image tag based on app directory — generate_image_tag","text":"Generate default Docker image tag based app directory","code":""},{"path":"/reference/generate_image_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a default Docker image tag based on app directory — generate_image_tag","text":"","code":"generate_image_tag(app_dir)"},{"path":"/reference/generate_image_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a default Docker image tag based on app directory — generate_image_tag","text":"app_dir Character. Path Shiny application directory.","code":""},{"path":"/reference/generate_image_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a default Docker image tag based on app directory — generate_image_tag","text":"Character. Generated tag.","code":""},{"path":"/reference/get_app_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"Get issues and recommendations for Shiny app containerization — get_app_issues","title":"Get issues and recommendations for Shiny app containerization — get_app_issues","text":"Get issues recommendations Shiny app containerization","code":""},{"path":"/reference/get_app_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get issues and recommendations for Shiny app containerization — get_app_issues","text":"","code":"get_app_issues(results)"},{"path":"/reference/get_app_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get issues and recommendations for Shiny app containerization — get_app_issues","text":"results List. Results Shiny app checks","code":""},{"path":"/reference/get_app_issues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get issues and recommendations for Shiny app containerization — get_app_issues","text":"List issues recommendations","code":""},{"path":"/reference/get_docker_issues.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Docker environment issues and recommendations — get_docker_issues","title":"Get Docker environment issues and recommendations — get_docker_issues","text":"Get Docker environment issues recommendations","code":""},{"path":"/reference/get_docker_issues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Docker environment issues and recommendations — get_docker_issues","text":"","code":"get_docker_issues(results)"},{"path":"/reference/get_docker_issues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Docker environment issues and recommendations — get_docker_issues","text":"results List. Results Docker environment checks","code":""},{"path":"/reference/get_docker_issues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Docker environment issues and recommendations — get_docker_issues","text":"List issues recommendations","code":""},{"path":"/reference/get_platform_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Get platform flag for Docker if needed — get_platform_flag","title":"Get platform flag for Docker if needed — get_platform_flag","text":"Returns platform flag Docker commands running ARM64 app type R. needed Shiny Server available natively ARM64 yet.","code":""},{"path":"/reference/get_platform_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get platform flag for Docker if needed — get_platform_flag","text":"","code":"get_platform_flag(app_type)"},{"path":"/reference/get_platform_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get platform flag for Docker if needed — get_platform_flag","text":"app_type Character. Either \"r\" \"python\".","code":""},{"path":"/reference/get_platform_flag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get platform flag for Docker if needed — get_platform_flag","text":"Character vector. Platform flag Docker commands empty vector needed.","code":""},{"path":"/reference/handle_multiple_containers.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle stopping multiple containers — handle_multiple_containers","title":"Handle stopping multiple containers — handle_multiple_containers","text":"Handle stopping multiple containers","code":""},{"path":"/reference/handle_multiple_containers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle stopping multiple containers — handle_multiple_containers","text":"","code":"handle_multiple_containers(container_ids, quiet = FALSE, force = FALSE, ...)"},{"path":"/reference/handle_multiple_containers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle stopping multiple containers — handle_multiple_containers","text":"container_ids Character vector. Container IDs. quiet Logical. Whether suppress output. force Logical. Whether skip confirmation. ... Additional arguments passed processx.","code":""},{"path":"/reference/handle_multiple_containers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle stopping multiple containers — handle_multiple_containers","text":"Logical. TRUE successful.","code":""},{"path":"/reference/handle_port_configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle port configuration and availability — handle_port_configuration","title":"Handle port configuration and availability — handle_port_configuration","text":"Handle port configuration availability","code":""},{"path":"/reference/handle_port_configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle port configuration and availability — handle_port_configuration","text":"","code":"handle_port_configuration(port, force_port = FALSE)"},{"path":"/reference/handle_port_configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle port configuration and availability — handle_port_configuration","text":"port Integer. Requested port. force_port Logical. Whether enforce requested port.","code":""},{"path":"/reference/handle_port_configuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle port configuration and availability — handle_port_configuration","text":"Integer. port use, either requested one alternative.","code":""},{"path":"/reference/has_shiny_app_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if directory contains Shiny app files — has_shiny_app_files","title":"Check if directory contains Shiny app files — has_shiny_app_files","text":"Check directory contains Shiny app files","code":""},{"path":"/reference/has_shiny_app_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if directory contains Shiny app files — has_shiny_app_files","text":"","code":"has_shiny_app_files(app_dir)"},{"path":"/reference/has_shiny_app_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if directory contains Shiny app files — has_shiny_app_files","text":"app_dir Character. Path Shiny application directory.","code":""},{"path":"/reference/has_shiny_app_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if directory contains Shiny app files — has_shiny_app_files","text":"Logical. TRUE directory contains valid Shiny app files.","code":""},{"path":"/reference/health_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Report dependencies health in a Shiny app — health_dependencies","title":"Report dependencies health in a Shiny app — health_dependencies","text":"Report dependencies health Shiny app","code":""},{"path":"/reference/health_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report dependencies health in a Shiny app — health_dependencies","text":"","code":"health_dependencies(app_dir, app_type, verbose = FALSE)"},{"path":"/reference/health_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report dependencies health in a Shiny app — health_dependencies","text":"app_dir Character. Path Shiny application directory app_type Character. Either \"r\" \"python\" verbose Logical. TRUE, provide detailed output","code":""},{"path":"/reference/health_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report dependencies health in a Shiny app — health_dependencies","text":"List dependency details","code":""},{"path":"/reference/health_docker_compose.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Docker Compose availability health — health_docker_compose","title":"Report Docker Compose availability health — health_docker_compose","text":"Report Docker Compose availability health","code":""},{"path":"/reference/health_docker_compose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Docker Compose availability health — health_docker_compose","text":"","code":"health_docker_compose(timeout = 30, ...)"},{"path":"/reference/health_docker_compose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Docker Compose availability health — health_docker_compose","text":"timeout Numeric. Timeout seconds commands ... Additional arguments passed processx","code":""},{"path":"/reference/health_docker_compose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Docker Compose availability health — health_docker_compose","text":"List Docker Compose details","code":""},{"path":"/reference/health_docker_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Docker configuration health in a Shiny app directory — health_docker_config","title":"Report Docker configuration health in a Shiny app directory — health_docker_config","text":"Report Docker configuration health Shiny app directory","code":""},{"path":"/reference/health_docker_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Docker configuration health in a Shiny app directory — health_docker_config","text":"","code":"health_docker_config(app_dir, app_type, verbose = FALSE, timeout = 30, ...)"},{"path":"/reference/health_docker_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Docker configuration health in a Shiny app directory — health_docker_config","text":"app_dir Character. Path Shiny application directory app_type Character. Either \"r\" \"python\" verbose Logical. TRUE, provide detailed output timeout Numeric. Timeout seconds commands ... Additional arguments passed processx","code":""},{"path":"/reference/health_docker_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Docker configuration health in a Shiny app directory — health_docker_config","text":"List Docker configuration details","code":""},{"path":"/reference/health_docker_containers.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Docker containers health for a Shiny app — health_docker_containers","title":"Report Docker containers health for a Shiny app — health_docker_containers","text":"Report Docker containers health Shiny app","code":""},{"path":"/reference/health_docker_containers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Docker containers health for a Shiny app — health_docker_containers","text":"","code":"health_docker_containers(   app_dir,   image_name,   verbose = FALSE,   timeout = 30,   ... )"},{"path":"/reference/health_docker_containers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Docker containers health for a Shiny app — health_docker_containers","text":"app_dir Character. Path Shiny application directory image_name Character. Name Docker image verbose Logical. TRUE, provide detailed output timeout Numeric. Timeout seconds commands ... Additional arguments passed processx","code":""},{"path":"/reference/health_docker_containers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Docker containers health for a Shiny app — health_docker_containers","text":"List Docker container details","code":""},{"path":"/reference/health_docker_daemon.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Docker daemon health status — health_docker_daemon","title":"Report Docker daemon health status — health_docker_daemon","text":"Report Docker daemon health status","code":""},{"path":"/reference/health_docker_daemon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Docker daemon health status — health_docker_daemon","text":"","code":"health_docker_daemon(timeout = 30, ...)"},{"path":"/reference/health_docker_daemon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Docker daemon health status — health_docker_daemon","text":"timeout Numeric. Timeout seconds commands ... Additional arguments passed processx","code":""},{"path":"/reference/health_docker_daemon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Docker daemon health status — health_docker_daemon","text":"List Docker daemon status details","code":""},{"path":"/reference/health_docker_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Docker image health for a Shiny app — health_docker_image","title":"Report Docker image health for a Shiny app — health_docker_image","text":"Report Docker image health Shiny app","code":""},{"path":"/reference/health_docker_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Docker image health for a Shiny app — health_docker_image","text":"","code":"health_docker_image(app_dir, verbose = FALSE, timeout = 30, ...)"},{"path":"/reference/health_docker_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Docker image health for a Shiny app — health_docker_image","text":"app_dir Character. Path Shiny application directory verbose Logical. TRUE, provide detailed output timeout Numeric. Timeout seconds commands ... Additional arguments passed processx","code":""},{"path":"/reference/health_docker_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Docker image health for a Shiny app — health_docker_image","text":"List Docker image details","code":""},{"path":"/reference/health_docker_installation.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Docker installation health — health_docker_installation","title":"Report Docker installation health — health_docker_installation","text":"Report Docker installation health","code":""},{"path":"/reference/health_docker_installation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Docker installation health — health_docker_installation","text":"","code":"health_docker_installation(timeout = 30, ...)"},{"path":"/reference/health_docker_installation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Docker installation health — health_docker_installation","text":"timeout Numeric. Timeout seconds commands ... Additional arguments passed processx","code":""},{"path":"/reference/health_docker_installation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Docker installation health — health_docker_installation","text":"List Docker installation details","code":""},{"path":"/reference/health_docker_permissions.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Docker permissions health — health_docker_permissions","title":"Report Docker permissions health — health_docker_permissions","text":"Report Docker permissions health","code":""},{"path":"/reference/health_docker_permissions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Docker permissions health — health_docker_permissions","text":"","code":"health_docker_permissions(timeout = 30, ...)"},{"path":"/reference/health_docker_permissions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Docker permissions health — health_docker_permissions","text":"timeout Numeric. Timeout seconds commands ... Additional arguments passed processx","code":""},{"path":"/reference/health_docker_permissions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Docker permissions health — health_docker_permissions","text":"List Docker permission details","code":""},{"path":"/reference/health_docker_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Docker resources health — health_docker_resources","title":"Report Docker resources health — health_docker_resources","text":"Report Docker resources health","code":""},{"path":"/reference/health_docker_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Docker resources health — health_docker_resources","text":"","code":"health_docker_resources(verbose = FALSE, timeout = 30, ...)"},{"path":"/reference/health_docker_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Docker resources health — health_docker_resources","text":"verbose Logical. TRUE, provide detailed output timeout Numeric. Timeout seconds commands ... Additional arguments passed processx","code":""},{"path":"/reference/health_docker_resources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Docker resources health — health_docker_resources","text":"List Docker resource details","code":""},{"path":"/reference/health_port_availability.html","id":null,"dir":"Reference","previous_headings":"","what":"Report port availability health — health_port_availability","title":"Report port availability health — health_port_availability","text":"Report port availability health","code":""},{"path":"/reference/health_port_availability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report port availability health — health_port_availability","text":"","code":"health_port_availability(ports, timeout = 30, port_timeout = 2, ...)"},{"path":"/reference/health_port_availability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report port availability health — health_port_availability","text":"ports Integer vector. Ports check timeout Numeric. Timeout seconds commands port_timeout Numeric. Timeout seconds port checking ... Additional arguments passed processx","code":""},{"path":"/reference/health_port_availability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report port availability health — health_port_availability","text":"List port availability details","code":""},{"path":"/reference/health_shiny_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Shiny app structure health — health_shiny_app","title":"Report Shiny app structure health — health_shiny_app","text":"Report Shiny app structure health","code":""},{"path":"/reference/health_shiny_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Shiny app structure health — health_shiny_app","text":"","code":"health_shiny_app(app_dir, verbose = FALSE)"},{"path":"/reference/health_shiny_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Shiny app structure health — health_shiny_app","text":"app_dir Character. Path Shiny application directory verbose Logical. TRUE, provide detailed output","code":""},{"path":"/reference/health_shiny_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Shiny app structure health — health_shiny_app","text":"List Shiny app details","code":""},{"path":"/reference/health_system_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Report system information health — health_system_info","title":"Report system information health — health_system_info","text":"Report system information health","code":""},{"path":"/reference/health_system_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report system information health — health_system_info","text":"","code":"health_system_info()"},{"path":"/reference/health_system_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report system information health — health_system_info","text":"List system information details","code":""},{"path":"/reference/is_arm64.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect if system is running on ARM64 architecture — is_arm64","title":"Detect if system is running on ARM64 architecture — is_arm64","text":"Detect system running ARM64 architecture","code":""},{"path":"/reference/is_arm64.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect if system is running on ARM64 architecture — is_arm64","text":"","code":"is_arm64()"},{"path":"/reference/is_arm64.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect if system is running on ARM64 architecture — is_arm64","text":"Logical. TRUE system running ARM64 architecture.","code":""},{"path":"/reference/is_docker_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Docker is available on the system — is_docker_available","title":"Check if Docker is available on the system — is_docker_available","text":"Check Docker available system","code":""},{"path":"/reference/is_docker_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Docker is available on the system — is_docker_available","text":"","code":"is_docker_available()"},{"path":"/reference/is_docker_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Docker is available on the system — is_docker_available","text":"Logical. TRUE Docker available system path.","code":""},{"path":"/reference/is_docker_compose_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Docker Compose is available — is_docker_compose_available","title":"Check if Docker Compose is available — is_docker_compose_available","text":"Check Docker Compose available","code":""},{"path":"/reference/is_docker_compose_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Docker Compose is available — is_docker_compose_available","text":"","code":"is_docker_compose_available()"},{"path":"/reference/is_docker_compose_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Docker Compose is available — is_docker_compose_available","text":"Logical. TRUE docker-compose command available system path.","code":""},{"path":"/reference/is_port_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a port is available on localhost — is_port_available","title":"Check if a port is available on localhost — is_port_available","text":"Check port available localhost","code":""},{"path":"/reference/is_port_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a port is available on localhost — is_port_available","text":"","code":"is_port_available(port)"},{"path":"/reference/is_port_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a port is available on localhost — is_port_available","text":"port Integer. port check.","code":""},{"path":"/reference/is_port_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a port is available on localhost — is_port_available","text":"Logical. TRUE port available, FALSE already use.","code":""},{"path":"/reference/prepare_build_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Docker build arguments — prepare_build_arguments","title":"Prepare Docker build arguments — prepare_build_arguments","text":"Prepare Docker build arguments","code":""},{"path":"/reference/prepare_build_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Docker build arguments — prepare_build_arguments","text":"","code":"prepare_build_arguments(app_dir, tag, build_args = NULL, quiet = FALSE)"},{"path":"/reference/prepare_build_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Docker build arguments — prepare_build_arguments","text":"app_dir Character. Path application directory. tag Character. Image tag. build_args Named character vector. Additional build arguments. quiet Logical. Whether use quiet mode.","code":""},{"path":"/reference/prepare_build_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Docker build arguments — prepare_build_arguments","text":"Character vector build arguments.","code":""},{"path":"/reference/process_containers.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and remove containers — process_containers","title":"Process and remove containers — process_containers","text":"Process remove containers","code":""},{"path":"/reference/process_containers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and remove containers — process_containers","text":"","code":"process_containers(container_lines, include_running, force, quiet, ...)"},{"path":"/reference/process_containers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and remove containers — process_containers","text":"container_lines Character vector. Container data lines. include_running Logical. Whether include running containers. force Logical. Whether force removal. quiet Logical. Whether suppress output. ... Additional arguments passed processx.","code":""},{"path":"/reference/process_containers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and remove containers — process_containers","text":"Integer. Number removed containers.","code":""},{"path":"/reference/process_dockerfile_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a Dockerfile template by replacing placeholders — process_dockerfile_template","title":"Process a Dockerfile template by replacing placeholders — process_dockerfile_template","text":"Process Dockerfile template replacing placeholders","code":""},{"path":"/reference/process_dockerfile_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a Dockerfile template by replacing placeholders — process_dockerfile_template","text":"","code":"process_dockerfile_template(   template_content,   app_type,   port,   dependencies,   env_vars )"},{"path":"/reference/process_dockerfile_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a Dockerfile template by replacing placeholders — process_dockerfile_template","text":"template_content Character vector. Template content. app_type Character. Either \"r\" \"python\". port Integer. port expose. dependencies List. Application dependencies. env_vars Named character vector. Environment variables.","code":""},{"path":"/reference/process_dockerfile_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a Dockerfile template by replacing placeholders — process_dockerfile_template","text":"Character vector processed template.","code":""},{"path":"/reference/remove_shinydocker_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove shinydocker images — remove_shinydocker_images","title":"Remove shinydocker images — remove_shinydocker_images","text":"Remove shinydocker images","code":""},{"path":"/reference/remove_shinydocker_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove shinydocker images — remove_shinydocker_images","text":"","code":"remove_shinydocker_images(app_dir, force, quiet, ...)"},{"path":"/reference/remove_shinydocker_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove shinydocker images — remove_shinydocker_images","text":"app_dir Character. Path application directory. NULL, shinydocker images. force Logical. Whether force removal. quiet Logical. Whether suppress output. ... Additional arguments passed processx.","code":""},{"path":"/reference/remove_shinydocker_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove shinydocker images — remove_shinydocker_images","text":"Integer. Number removed images.","code":""},{"path":"/reference/run_container.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a Docker container with a Shiny application — run_container","title":"Run a Docker container with a Shiny application — run_container","text":"Run Docker container Shiny application","code":""},{"path":"/reference/run_container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a Docker container with a Shiny application — run_container","text":"","code":"run_container(   app_dir,   tag = NULL,   port = 3838,   detach = FALSE,   env_vars = NULL,   docker_compose = TRUE,   quiet = FALSE,   force_port = FALSE,   ... )"},{"path":"/reference/run_container.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a Docker container with a Shiny application — run_container","text":"app_dir Character. Path Shiny application directory Docker configuration. tag Character. tag Docker image run. NULL, tag generated directory name (match used build_image). port Integer. port map container's exposed port. Default: 3838. detach Logical. TRUE, run container detached mode. Default: FALSE. env_vars Named character vector. Environment variables pass container. docker_compose Logical. TRUE, use docker-compose running available. Default: TRUE. quiet Logical. TRUE, suppress Docker command output. Default: FALSE. force_port Logical. TRUE, fail requested port unavailable. FALSE, try find alternative port. Default: FALSE. ... Additional arguments passed processx.","code":""},{"path":"/reference/run_container.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a Docker container with a Shiny application — run_container","text":"detached mode, invisibly returns container ID successful. attached mode, function block container stops.","code":""},{"path":"/reference/run_container.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a Docker container with a Shiny application — run_container","text":"","code":"if (FALSE) { # \\dontrun{ # First create Docker configuration and build dockerize(\"path/to/my/shinyapp\") build_image(\"path/to/my/shinyapp\")  # Run the container run_container(\"path/to/my/shinyapp\")  # Run detached on a different port run_container(\"path/to/my/shinyapp\", port = 8080, detach = TRUE) } # }"},{"path":"/reference/run_docker_prune.html","id":null,"dir":"Reference","previous_headings":"","what":"Run docker system prune — run_docker_prune","title":"Run docker system prune — run_docker_prune","text":"Run docker system prune","code":""},{"path":"/reference/run_docker_prune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run docker system prune — run_docker_prune","text":"","code":"run_docker_prune(force, quiet, ...)"},{"path":"/reference/run_docker_prune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run docker system prune — run_docker_prune","text":"force Logical. Whether force prune. quiet Logical. Whether suppress output. ... Additional arguments passed processx.","code":""},{"path":"/reference/run_docker_prune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run docker system prune — run_docker_prune","text":"Invisibly returns TRUE.","code":""},{"path":"/reference/run_with_compose.html","id":null,"dir":"Reference","previous_headings":"","what":"Run container using docker-compose — run_with_compose","title":"Run container using docker-compose — run_with_compose","text":"Run container using docker-compose","code":""},{"path":"/reference/run_with_compose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run container using docker-compose — run_with_compose","text":"","code":"run_with_compose(   app_dir,   port,   env_vars = NULL,   detach = FALSE,   quiet = FALSE,   ... )"},{"path":"/reference/run_with_compose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run container using docker-compose — run_with_compose","text":"app_dir Character. Path Shiny application directory. port Integer. port map. env_vars Named character vector. Environment variables. detach Logical. Whether run detached mode. quiet Logical. Whether suppress output. ... Additional arguments passed processx.","code":""},{"path":"/reference/run_with_compose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run container using docker-compose — run_with_compose","text":"Character. Container ID successful.","code":""},{"path":"/reference/run_with_docker.html","id":null,"dir":"Reference","previous_headings":"","what":"Run container using docker run — run_with_docker","title":"Run container using docker run — run_with_docker","text":"Run container using docker run","code":""},{"path":"/reference/run_with_docker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run container using docker run — run_with_docker","text":"","code":"run_with_docker(   tag,   port,   app_type,   env_vars = NULL,   detach = FALSE,   quiet = FALSE,   ... )"},{"path":"/reference/run_with_docker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run container using docker run — run_with_docker","text":"tag Character. Docker image tag. port Integer. port map. app_type Character. Either \"r\" \"python\". env_vars Named character vector. Environment variables. detach Logical. Whether run detached mode. quiet Logical. Whether suppress output. ... Additional arguments passed processx.","code":""},{"path":"/reference/run_with_docker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run container using docker run — run_with_docker","text":"Character. Container ID successful.","code":""},{"path":"/reference/should_use_compose.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if docker-compose should be used for container operations — should_use_compose","title":"Determine if docker-compose should be used for container operations — should_use_compose","text":"Determine docker-compose used container operations","code":""},{"path":"/reference/should_use_compose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if docker-compose should be used for container operations — should_use_compose","text":"","code":"should_use_compose(app_dir, docker_compose = TRUE)"},{"path":"/reference/should_use_compose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if docker-compose should be used for container operations — should_use_compose","text":"app_dir Character. Path Shiny application directory. docker_compose Logical. User preference using docker-compose.","code":""},{"path":"/reference/should_use_compose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if docker-compose should be used for container operations — should_use_compose","text":"Logical. TRUE docker-compose used.","code":""},{"path":"/reference/sitrep_app_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Situation report for Shiny app containerization — sitrep_app_conversion","title":"Situation report for Shiny app containerization — sitrep_app_conversion","text":"function analyzes Shiny application directory checks readiness containerization. examines Shiny app structure, Docker configuration files, dependency detection, image building status, running containers.","code":""},{"path":"/reference/sitrep_app_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Situation report for Shiny app containerization — sitrep_app_conversion","text":"","code":"sitrep_app_conversion(   app_dir,   check_dependencies = TRUE,   verbose = FALSE,   timeout = 30,   ... )"},{"path":"/reference/sitrep_app_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Situation report for Shiny app containerization — sitrep_app_conversion","text":"app_dir Character. Path Shiny application directory analyze. check_dependencies Logical. TRUE, detect display app dependencies. Default: TRUE. verbose Logical. TRUE, provide detailed output. Default: FALSE. timeout Numeric. Timeout seconds commands. Default: 30. ... Additional arguments passed processx.","code":""},{"path":"/reference/sitrep_app_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Situation report for Shiny app containerization — sitrep_app_conversion","text":"Invisibly returns list Shiny app containerization diagnostic results.","code":""},{"path":"/reference/sitrep_app_conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Situation report for Shiny app containerization — sitrep_app_conversion","text":"","code":"if (FALSE) { # \\dontrun{ # Basic Shiny app containerization report sitrep_app_conversion(\"path/to/my/shinyapp\")  # Detailed report with dependency analysis sitrep_app_conversion(\"path/to/my/shinyapp\", verbose = TRUE)  # Skip dependency detection sitrep_app_conversion(\"path/to/my/shinyapp\", check_dependencies = FALSE) } # }"},{"path":"/reference/sitrep_docker.html","id":null,"dir":"Reference","previous_headings":"","what":"Situation report for Docker environment — sitrep_docker","title":"Situation report for Docker environment — sitrep_docker","text":"function provides comprehensive report Docker environment including installation status, version information, daemon status, permissions, resource usage, port availability. helps identify issues Docker setup might affect containerizing Shiny applications.","code":""},{"path":"/reference/sitrep_docker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Situation report for Docker environment — sitrep_docker","text":"","code":"sitrep_docker(   check_ports = TRUE,   verbose = FALSE,   timeout = 30,   port_timeout = 2,   ... )"},{"path":"/reference/sitrep_docker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Situation report for Docker environment — sitrep_docker","text":"check_ports Logical. TRUE, check common port conflicts. Default: TRUE. verbose Logical. TRUE, provide detailed output. Default: FALSE. timeout Numeric. Timeout seconds Docker commands. Default: 30. port_timeout Numeric. Timeout seconds port checking. Default: 2. ... Additional arguments passed processx.","code":""},{"path":"/reference/sitrep_docker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Situation report for Docker environment — sitrep_docker","text":"Invisibly returns list Docker environment diagnostic results.","code":""},{"path":"/reference/sitrep_docker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Situation report for Docker environment — sitrep_docker","text":"","code":"if (FALSE) { # \\dontrun{ # Basic Docker environment report sitrep_docker()  # Detailed Docker environment report sitrep_docker(verbose = TRUE)  # Skip port checking sitrep_docker(check_ports = FALSE)  # Use shorter timeout for port checking sitrep_docker(port_timeout = 1) } # }"},{"path":"/reference/stop_all_containers.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop all running Docker containers — stop_all_containers","title":"Stop all running Docker containers — stop_all_containers","text":"Stop running Docker containers","code":""},{"path":"/reference/stop_all_containers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop all running Docker containers — stop_all_containers","text":"","code":"stop_all_containers(quiet = FALSE, force = FALSE, ...)"},{"path":"/reference/stop_all_containers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop all running Docker containers — stop_all_containers","text":"quiet Logical. Whether suppress output. force Logical. Whether skip confirmation. ... Additional arguments passed processx.","code":""},{"path":"/reference/stop_all_containers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop all running Docker containers — stop_all_containers","text":"Logical. TRUE successful.","code":""},{"path":"/reference/stop_container.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop running Docker containers for a Shiny application — stop_container","title":"Stop running Docker containers for a Shiny application — stop_container","text":"function stops running Docker container started run_container() export(). can stop containers ID finding containers associated specified application directory. neither app_dir container_id provided, stop running containers.","code":""},{"path":"/reference/stop_container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop running Docker containers for a Shiny application — stop_container","text":"","code":"stop_container(   app_dir = NULL,   container_id = NULL,   docker_compose = TRUE,   quiet = FALSE,   force = FALSE,   ... )"},{"path":"/reference/stop_container.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop running Docker containers for a Shiny application — stop_container","text":"app_dir Character. Path Shiny application directory Docker configuration. provided, function attempt find stop containers based image name. container_id Character. ID name container stop. NULL, function try find containers based app_dir. docker_compose Logical. TRUE, use docker-compose stopping available. Default: TRUE. quiet Logical. TRUE, suppress Docker command output. Default: FALSE. force Logical. TRUE stopping containers, skip confirmation prompt. Default: FALSE. ... Additional arguments passed processx.","code":""},{"path":"/reference/stop_container.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop running Docker containers for a Shiny application — stop_container","text":"Invisibly returns TRUE successful, FALSE otherwise.","code":""},{"path":"/reference/stop_container.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stop running Docker containers for a Shiny application — stop_container","text":"","code":"if (FALSE) { # \\dontrun{ # First run a container result <- export(\"path/to/my/shinyapp\", run = TRUE)  # Stop by container ID stop_container(container_id = result$container_id)  # Or stop by app directory stop_container(\"path/to/my/shinyapp\")  # Stop all running containers stop_container() } # }"},{"path":"/reference/stop_containers_for_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop containers for a specific application — stop_containers_for_app","title":"Stop containers for a specific application — stop_containers_for_app","text":"Stop containers specific application","code":""},{"path":"/reference/stop_containers_for_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop containers for a specific application — stop_containers_for_app","text":"","code":"stop_containers_for_app(app_dir, quiet = FALSE, force = FALSE, ...)"},{"path":"/reference/stop_containers_for_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop containers for a specific application — stop_containers_for_app","text":"app_dir Character. Path application directory. quiet Logical. Whether suppress output. force Logical. Whether skip confirmation. ... Additional arguments passed processx.","code":""},{"path":"/reference/stop_containers_for_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop containers for a specific application — stop_containers_for_app","text":"Logical. TRUE successful.","code":""},{"path":"/reference/stop_docker_container.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop a Docker container — stop_docker_container","title":"Stop a Docker container — stop_docker_container","text":"Stop Docker container","code":""},{"path":"/reference/stop_docker_container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop a Docker container — stop_docker_container","text":"","code":"stop_docker_container(container_id, quiet = FALSE, ...)"},{"path":"/reference/stop_docker_container.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop a Docker container — stop_docker_container","text":"container_id Character. ID container stop. quiet Logical. Whether suppress output. ... Additional arguments passed processx.","code":""},{"path":"/reference/stop_docker_container.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop a Docker container — stop_docker_container","text":"Logical. TRUE successful.","code":""},{"path":"/reference/stop_running_containers.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop running containers — stop_running_containers","title":"Stop running containers — stop_running_containers","text":"Stop running containers","code":""},{"path":"/reference/stop_running_containers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop running containers — stop_running_containers","text":"","code":"stop_running_containers(container_ids, quiet, ...)"},{"path":"/reference/stop_running_containers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop running containers — stop_running_containers","text":"container_ids Character vector. Container IDs stop. quiet Logical. Whether suppress output. ... Additional arguments passed processx.","code":""},{"path":"/reference/stop_running_containers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop running containers — stop_running_containers","text":"Invisibly returns TRUE.","code":""},{"path":"/reference/stop_with_compose.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop containers using docker-compose — stop_with_compose","title":"Stop containers using docker-compose — stop_with_compose","text":"Stop containers using docker-compose","code":""},{"path":"/reference/stop_with_compose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop containers using docker-compose — stop_with_compose","text":"","code":"stop_with_compose(app_dir, quiet = FALSE, ...)"},{"path":"/reference/stop_with_compose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop containers using docker-compose — stop_with_compose","text":"app_dir Character. Path application directory. quiet Logical. Whether suppress output. ... Additional arguments passed processx.","code":""},{"path":"/reference/stop_with_compose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop containers using docker-compose — stop_with_compose","text":"Logical. TRUE successful.","code":""},{"path":"/reference/update_compose_port.html","id":null,"dir":"Reference","previous_headings":"","what":"Update port mapping in docker-compose.yml — update_compose_port","title":"Update port mapping in docker-compose.yml — update_compose_port","text":"Update port mapping docker-compose.yml","code":""},{"path":"/reference/update_compose_port.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update port mapping in docker-compose.yml — update_compose_port","text":"","code":"update_compose_port(app_dir, port)"},{"path":"/reference/update_compose_port.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update port mapping in docker-compose.yml — update_compose_port","text":"app_dir Character. Path application directory. port Integer. New port use.","code":""},{"path":"/reference/update_compose_port.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update port mapping in docker-compose.yml — update_compose_port","text":"Invisibly returns TRUE successful.","code":""}]
